name: Deploy to Server

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
    types:
      - closed
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-20.04
    if: github.event.pull_request.merged == true || github.event_name != 'pull_request'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ilyasvinarenko
          password: ${{ secrets.DEPLOY_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ghcr.io/ilyasvinarenko/telegrambot:latest

      - name: Deploy to server
        env:
          SERVER_IP: ${{ secrets.SERVER_IP }}
          SERVER_LOGIN: ${{ secrets.SERVER_LOGIN }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          echo "$SSH_PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem
          mkdir -p ~/.ssh
          ssh-keyscan $SERVER_IP >> ~/.ssh/known_hosts
          ssh -i private_key.pem $SERVER_LOGIN@$SERVER_IP '"sudo docker stop ilyatgbot" || echo "This container dosnt exist"'
          ssh -i private_key.pem $SERVER_LOGIN@$SERVER_IP '"sudo docker rm ilyatgbot" || echo "This container dosnt exist"'
          ssh -i private_key.pem $SERVER_LOGIN@$SERVER_IP "sudo docker login ghcr.io -u ilyasvinarenko -p ${{ secrets.DEPLOY_TOKEN }} && sudo docker run -d --name ilyatgbot -e OWM_api_key=${{ secrets.OWM_API_KEY }} -e openai_api_key=${{ secrets.OPENAI_API_KEY }} -e Son_of_Ilya_bot_id=${{ secrets.SON_OF_ILYA_BOT_ID }} -e Son_of_Ilya_bot=${{ secrets.SON_OF_ILYA_BOT }} ghcr.io/ilyasvinarenko/telegrambot:latest"
          rm -f private_key.pem
